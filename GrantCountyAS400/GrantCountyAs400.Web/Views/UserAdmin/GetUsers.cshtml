@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<GrantCountyAs400.PersistenceAdapter.SecurityModule.Models.ApplicationUser>


<div id="userList">

    <table class="table">
        <tr>
            <td>
                User name
            </td>
            <td>
                Email
            </td>
            <td>
                Mobile number
            </td>

            <td></td>
        </tr>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>

                    <td>
                        <a href="@Url.Action("Edit", "UserAdmin", new { item.Id })" class="btn btn-info"> <span class="glyphicon glyphicon-edit"></span><span class="hidden-xs"> Edit </span></a>
                        <a href="@Url.Action("Details", "UserAdmin", new { item.Id })" class="btn btn-info"> <span class="fa fa-clipboard"></span><span class="hidden-xs"> Details </span> </a>
                    </td>
                </tr>
            }
        }

    </table>

    @if(Model != null)
    {
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("GetUsers", new { page, searchVal = ViewBag.searchVal }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { UpdateTargetId = "userList" }))
        <input type="hidden" name="currentPage" id="currentPage" value="@Model.PageNumber" />
    </div>
    }
</div>
