
@model IEnumerable<GrantCountyAs400.Domain.Accounting.Personnel>
@using X.PagedList.Mvc.Core;
@using GrantCountyAs400.Web.ViewModels.AccountingVM
@using X.PagedList;

@{
    ViewData["Title"] = "Personnel";
    var filterViewModel = ViewBag.FilterViewModel as AccountingFilterVm;
}

<h2>Personnel</h2>
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Employees</h2>
<p>
    @using (Html.BeginForm("Index", "Personnel", FormMethod.Get))
    {
        <div class="form-horizontal">
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.FirstName, null, "firstname", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.LastName, null, "lastname", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => filterViewModel.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => filterViewModel.SSN, null, "ssn", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="form-group pull-right">
                        <input type="submit" value="Filter" class="btn btn-success" />
                        <input type="button" value="Clear" class="btn btn-default" id="btnReset" />
                    </div>
                </div>
            </div>
        </div>
    }
</p>

<nav aria-label="navigation">
    @Html.PagedListPager((IPagedList)Model, pageNumber => Url.Action("Index", new {
    pageNumber = pageNumber,
    firstname = filterViewModel.FirstName,
    lastname = filterViewModel.LastName,
    status = filterViewModel.SSN
}))
</nav>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().HasContracts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().PersonNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().SSNumber)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HasContracts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PersonNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SSNumber)
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="navigation">
    @Html.PagedListPager((IPagedList)Model, pageNumber => Url.Action("Index", "Personnel", new {
    pageNumber = pageNumber,
    firstname = filterViewModel.FirstName,
    lastname = filterViewModel.LastName,
    sSN = filterViewModel.SSN
}))
</nav>


